/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED! */
#ifndef __XDPPASS_BPF_SKEL_H__
#define __XDPPASS_BPF_SKEL_H__

#include <stdlib.h>
#include <bpf/libbpf.h>

struct xdppass_bpf {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_program *xdp_prog_simple;
	} progs;
	struct {
		struct bpf_link *xdp_prog_simple;
	} links;
};

static void xdppass_bpf__destroy(struct xdppass_bpf *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int xdppass_bpf__create_skeleton(struct xdppass_bpf *obj);

static inline struct xdppass_bpf *xdppass_bpf__open_opts(const struct
							 bpf_object_open_opts
							 *opts)
{
	struct xdppass_bpf *obj;

	obj = (struct xdppass_bpf *)calloc(1, sizeof(*obj));
	if (!obj)
		return NULL;
	if (xdppass_bpf__create_skeleton(obj))
		goto err;
	if (bpf_object__open_skeleton(obj->skeleton, opts))
		goto err;

	return obj;
 err:
	xdppass_bpf__destroy(obj);
	return NULL;
}

static inline struct xdppass_bpf *xdppass_bpf__open(void)
{
	return xdppass_bpf__open_opts(NULL);
}

static inline int xdppass_bpf__load(struct xdppass_bpf *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct xdppass_bpf *xdppass_bpf__open_and_load(void)
{
	struct xdppass_bpf *obj;

	obj = xdppass_bpf__open();
	if (!obj)
		return NULL;
	if (xdppass_bpf__load(obj)) {
		xdppass_bpf__destroy(obj);
		return NULL;
	}
	return obj;
}

static inline int xdppass_bpf__attach(struct xdppass_bpf *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void xdppass_bpf__detach(struct xdppass_bpf *obj)
{
	return bpf_object__detach_skeleton(obj->skeleton);
}

static inline int xdppass_bpf__create_skeleton(struct xdppass_bpf *obj)
{
	struct bpf_object_skeleton *s;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)
		return -1;
	obj->skeleton = s;

	s->sz = sizeof(*s);
	s->name = "xdppass_bpf";
	s->obj = &obj->obj;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs =
	    (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs)
		goto err;

	s->progs[0].name = "xdp_prog_simple";
	s->progs[0].prog = &obj->progs.xdp_prog_simple;
	s->progs[0].link = &obj->links.xdp_prog_simple;

	s->data_sz = 3792;
	s->data = (void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x10\x0a\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x13\0\
\x01\0\xb7\0\0\0\x02\0\0\0\x95\0\0\0\0\0\0\0\x47\x50\x4c\0\x01\x11\x01\x25\x0e\
\x13\x05\x03\x0e\x10\x17\x1b\x0e\x11\x01\x12\x06\0\0\x02\x34\0\x03\x0e\x49\x13\
\x3f\x19\x3a\x0b\x3b\x0b\x02\x18\0\0\x03\x01\x01\x49\x13\0\0\x04\x21\0\x49\x13\
\x37\x0b\0\0\x05\x24\0\x03\x0e\x3e\x0b\x0b\x0b\0\0\x06\x24\0\x03\x0e\x0b\x0b\
\x3e\x0b\0\0\x07\x04\x01\x49\x13\x03\x0e\x0b\x0b\x3a\x0b\x3b\x05\0\0\x08\x28\0\
\x03\x0e\x1c\x0f\0\0\x09\x2e\x01\x11\x01\x12\x06\x40\x18\x97\x42\x19\x03\x0e\
\x3a\x0b\x3b\x0b\x27\x19\x49\x13\x3f\x19\0\0\x0a\x05\0\x03\x0e\x3a\x0b\x3b\x0b\
\x49\x13\0\0\x0b\x0f\0\x49\x13\0\0\x0c\x13\x01\x03\x0e\x0b\x0b\x3a\x0b\x3b\x05\
\0\0\x0d\x0d\0\x03\x0e\x49\x13\x3a\x0b\x3b\x05\x38\x0b\0\0\x0e\x16\0\x49\x13\
\x03\x0e\x3a\x0b\x3b\x0b\0\0\0\x1d\x01\0\0\x04\0\0\0\0\0\x08\x01\0\0\0\0\x0c\0\
\x1e\0\0\0\0\0\0\0\x2c\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\x02\x3b\0\0\0\x3f\0\0\0\
\x01\x0b\x09\x03\0\0\0\0\0\0\0\0\x03\x4b\0\0\0\x04\x52\0\0\0\x04\0\x05\x44\0\0\
\0\x06\x01\x06\x49\0\0\0\x08\x07\x07\x85\0\0\0\x9c\0\0\0\x04\x02\x98\x14\x08\
\x6a\0\0\0\0\x08\x76\0\0\0\x01\x08\x7f\0\0\0\x02\x08\x88\0\0\0\x03\x08\x8f\0\0\
\0\x04\0\x05\x5d\0\0\0\x07\x04\x09\0\0\0\0\0\0\0\0\x10\0\0\0\x01\x5a\xa7\0\0\0\
\x01\x06\xb1\0\0\0\x0a\xbb\0\0\0\x01\x06\xb8\0\0\0\0\x05\xb7\0\0\0\x05\x04\x0b\
\xbd\0\0\0\x0c\x0b\x01\0\0\x18\x02\xa3\x14\x0d\xbf\0\0\0\x15\x01\0\0\x02\xa4\
\x14\0\x0d\xca\0\0\0\x15\x01\0\0\x02\xa5\x14\x04\x0d\xd3\0\0\0\x15\x01\0\0\x02\
\xa6\x14\x08\x0d\xdd\0\0\0\x15\x01\0\0\x02\xa8\x14\x0c\x0d\xed\0\0\0\x15\x01\0\
\0\x02\xa9\x14\x10\x0d\xfc\0\0\0\x15\x01\0\0\x02\xab\x14\x14\0\x0e\x85\0\0\0\
\xc4\0\0\0\x03\x1b\0\x55\x62\x75\x6e\x74\x75\x20\x63\x6c\x61\x6e\x67\x20\x76\
\x65\x72\x73\x69\x6f\x6e\x20\x31\x33\x2e\x30\x2e\x30\x2d\x32\0\x78\x64\x70\x70\
\x61\x73\x73\x2e\x62\x70\x66\x2e\x63\0\x2f\x65\x62\x70\x66\x2f\x62\x70\x66\x2d\
\x61\x70\x70\x73\0\x5f\x6c\x69\x63\x65\x6e\x73\x65\0\x63\x68\x61\x72\0\x5f\x5f\
\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x75\x6e\
\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x58\x44\x50\x5f\x41\x42\x4f\x52\x54\
\x45\x44\0\x58\x44\x50\x5f\x44\x52\x4f\x50\0\x58\x44\x50\x5f\x50\x41\x53\x53\0\
\x58\x44\x50\x5f\x54\x58\0\x58\x44\x50\x5f\x52\x45\x44\x49\x52\x45\x43\x54\0\
\x78\x64\x70\x5f\x61\x63\x74\x69\x6f\x6e\0\x78\x64\x70\x5f\x70\x72\x6f\x67\x5f\
\x73\x69\x6d\x70\x6c\x65\0\x69\x6e\x74\0\x63\x74\x78\0\x64\x61\x74\x61\0\x5f\
\x5f\x75\x33\x32\0\x64\x61\x74\x61\x5f\x65\x6e\x64\0\x64\x61\x74\x61\x5f\x6d\
\x65\x74\x61\0\x69\x6e\x67\x72\x65\x73\x73\x5f\x69\x66\x69\x6e\x64\x65\x78\0\
\x72\x78\x5f\x71\x75\x65\x75\x65\x5f\x69\x6e\x64\x65\x78\0\x65\x67\x72\x65\x73\
\x73\x5f\x69\x66\x69\x6e\x64\x65\x78\0\x78\x64\x70\x5f\x6d\x64\0\x9f\xeb\x01\0\
\x18\0\0\0\0\0\0\0\x0c\x01\0\0\x0c\x01\0\0\xe6\0\0\0\0\0\0\0\0\0\0\x02\x02\0\0\
\0\x01\0\0\0\x06\0\0\x04\x18\0\0\0\x08\0\0\0\x03\0\0\0\0\0\0\0\x0d\0\0\0\x03\0\
\0\0\x20\0\0\0\x16\0\0\0\x03\0\0\0\x40\0\0\0\x20\0\0\0\x03\0\0\0\x60\0\0\0\x30\
\0\0\0\x03\0\0\0\x80\0\0\0\x3f\0\0\0\x03\0\0\0\xa0\0\0\0\x4e\0\0\0\0\0\0\x08\
\x04\0\0\0\x54\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\x01\0\0\x0d\x06\0\0\
\0\x61\0\0\0\x01\0\0\0\x65\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\x01\x69\0\0\0\x01\
\0\0\x0c\x05\0\0\0\xbc\0\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\0\0\0\0\0\0\0\x03\
\0\0\0\0\x08\0\0\0\x0a\0\0\0\x04\0\0\0\xc1\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\
\xd5\0\0\0\0\0\0\x0e\x09\0\0\0\x01\0\0\0\xde\0\0\0\x01\0\0\x0f\0\0\0\0\x0b\0\0\
\0\0\0\0\0\x04\0\0\0\0\x78\x64\x70\x5f\x6d\x64\0\x64\x61\x74\x61\0\x64\x61\x74\
\x61\x5f\x65\x6e\x64\0\x64\x61\x74\x61\x5f\x6d\x65\x74\x61\0\x69\x6e\x67\x72\
\x65\x73\x73\x5f\x69\x66\x69\x6e\x64\x65\x78\0\x72\x78\x5f\x71\x75\x65\x75\x65\
\x5f\x69\x6e\x64\x65\x78\0\x65\x67\x72\x65\x73\x73\x5f\x69\x66\x69\x6e\x64\x65\
\x78\0\x5f\x5f\x75\x33\x32\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\
\x63\x74\x78\0\x69\x6e\x74\0\x78\x64\x70\x5f\x70\x72\x6f\x67\x5f\x73\x69\x6d\
\x70\x6c\x65\0\x78\x64\x70\x2f\x78\x64\x70\x5f\x70\x72\x6f\x67\x5f\x73\x69\x6d\
\x70\x6c\x65\0\x2f\x65\x62\x70\x66\x2f\x62\x70\x66\x2d\x61\x70\x70\x73\x2f\x78\
\x64\x70\x70\x61\x73\x73\x2e\x62\x70\x66\x2e\x63\0\x09\x72\x65\x74\x75\x72\x6e\
\x20\x58\x44\x50\x5f\x50\x41\x53\x53\x3b\0\x63\x68\x61\x72\0\x5f\x5f\x41\x52\
\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x5f\x6c\x69\x63\
\x65\x6e\x73\x65\0\x6c\x69\x63\x65\x6e\x73\x65\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\
\0\x14\0\0\0\x14\0\0\0\x1c\0\0\0\x30\0\0\0\0\0\0\0\x08\0\0\0\x79\0\0\0\x01\0\0\
\0\0\0\0\0\x07\0\0\0\x10\0\0\0\x79\0\0\0\x01\0\0\0\0\0\0\0\x8d\0\0\0\xaa\0\0\0\
\x02\x20\0\0\0\0\0\0\0\x0c\0\0\0\xff\xff\xff\xff\x04\0\x08\0\x08\x7c\x0b\0\x14\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x83\0\0\0\x04\0\x68\0\0\0\x08\
\x01\x01\xfb\x0e\x0d\0\x01\x01\x01\x01\0\0\0\x01\0\0\x01\x2f\x75\x73\x72\x2f\
\x69\x6e\x63\x6c\x75\x64\x65\x2f\x6c\x69\x6e\x75\x78\0\x2f\x75\x73\x72\x2f\x69\
\x6e\x63\x6c\x75\x64\x65\x2f\x61\x73\x6d\x2d\x67\x65\x6e\x65\x72\x69\x63\0\0\
\x78\x64\x70\x70\x61\x73\x73\x2e\x62\x70\x66\x2e\x63\0\0\0\0\x62\x70\x66\x2e\
\x68\0\x01\0\0\x69\x6e\x74\x2d\x6c\x6c\x36\x34\x2e\x68\0\x02\0\0\0\0\x09\x02\0\
\0\0\0\0\0\0\0\x18\x05\x02\x0a\x13\x02\x02\0\x01\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x89\0\0\0\x04\0\xf1\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x05\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x03\0\x0d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0f\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x79\0\0\0\x12\0\x03\0\0\0\0\0\0\0\0\0\x10\0\0\0\0\
\0\0\0\x4b\0\0\0\x11\0\x04\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\x06\0\0\0\0\0\0\
\0\x03\0\0\0\x03\0\0\0\x0c\0\0\0\0\0\0\0\x03\0\0\0\x04\0\0\0\x12\0\0\0\0\0\0\0\
\x03\0\0\0\x04\0\0\0\x16\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x1a\0\0\0\0\0\0\0\
\x03\0\0\0\x04\0\0\0\x1e\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x2b\0\0\0\0\0\0\0\
\x03\0\0\0\x04\0\0\0\x37\0\0\0\0\0\0\0\x02\0\0\0\x08\0\0\0\x4c\0\0\0\0\0\0\0\
\x03\0\0\0\x04\0\0\0\x53\0\0\0\0\0\0\0\x03\0\0\0\x04\0\0\0\x5e\0\0\0\0\0\0\0\
\x03\0\0\0\x04\0\0\0\x67\0\0\0\0\0\0\0\x03\0\0\0\x04\0\0\0\x6d\0\0\0\0\0\0\0\
\x03\0\0\0\x04\0\0\0\x73\0\0\0\0\0\0\0\x03\0\0\0\x04\0\0\0\x79\0\0\0\0\0\0\0\
\x03\0\0\0\x04\0\0\0\x7f\0\0\0\0\0\0\0\x03\0\0\0\x04\0\0\0\x86\0\0\0\0\0\0\0\
\x03\0\0\0\x04\0\0\0\x8d\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x9b\0\0\0\0\0\0\0\
\x03\0\0\0\x04\0\0\0\xa6\0\0\0\0\0\0\0\x03\0\0\0\x04\0\0\0\xb2\0\0\0\0\0\0\0\
\x03\0\0\0\x04\0\0\0\xbe\0\0\0\0\0\0\0\x03\0\0\0\x04\0\0\0\xc7\0\0\0\0\0\0\0\
\x03\0\0\0\x04\0\0\0\xd4\0\0\0\0\0\0\0\x03\0\0\0\x04\0\0\0\xe1\0\0\0\0\0\0\0\
\x03\0\0\0\x04\0\0\0\xee\0\0\0\0\0\0\0\x03\0\0\0\x04\0\0\0\xfb\0\0\0\0\0\0\0\
\x03\0\0\0\x04\0\0\0\x08\x01\0\0\0\0\0\0\x03\0\0\0\x04\0\0\0\x1a\x01\0\0\0\0\0\
\0\x03\0\0\0\x04\0\0\0\x1c\x01\0\0\0\0\0\0\x04\0\0\0\x08\0\0\0\x2c\0\0\0\0\0\0\
\0\x04\0\0\0\x02\0\0\0\x40\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x14\0\0\0\0\0\0\0\
\x03\0\0\0\x05\0\0\0\x18\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x75\0\0\0\0\0\0\0\
\x02\0\0\0\x02\0\0\0\x07\x08\0\x2e\x64\x65\x62\x75\x67\x5f\x61\x62\x62\x72\x65\
\x76\0\x2e\x74\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\x78\x74\0\
\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\x72\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\
\x67\x5f\x69\x6e\x66\x6f\0\x2e\x6c\x6c\x76\x6d\x5f\x61\x64\x64\x72\x73\x69\x67\
\0\x5f\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\
\x5f\x6c\x69\x6e\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x66\x72\x61\
\x6d\x65\0\x78\x64\x70\x2f\x78\x64\x70\x5f\x70\x72\x6f\x67\x5f\x73\x69\x6d\x70\
\x6c\x65\0\x78\x64\x70\x70\x61\x73\x73\x2e\x62\x70\x66\x2e\x63\0\x2e\x73\x74\
\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x2e\x72\x65\x6c\x2e\x42\x54\
\x46\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x97\0\0\0\
\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x5a\x09\0\0\0\0\0\0\xb0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x01\0\0\0\x06\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x75\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x40\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x4c\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x50\0\
\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x01\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x54\0\0\0\0\0\0\0\xba\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x31\0\0\0\x01\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0e\x01\0\0\0\0\0\0\x21\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x2d\0\0\0\x09\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x28\x07\0\0\0\0\0\0\xd0\x01\0\0\0\0\0\0\x12\0\0\0\x06\0\
\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x22\0\0\0\x01\0\0\0\x30\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x2f\x02\0\0\0\0\0\0\x12\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\
\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\xab\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x41\x03\0\0\0\0\0\0\x0a\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\xa7\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf8\x08\0\
\0\0\0\0\0\x10\0\0\0\0\0\0\0\x12\0\0\0\x09\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\
\0\0\0\x19\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x4b\x05\0\0\0\0\0\0\
\x50\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x15\0\0\0\
\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\x09\0\0\0\0\0\0\x20\0\0\0\0\0\0\
\0\x12\0\0\0\x0b\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x68\0\0\0\x01\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa0\x05\0\0\0\0\0\0\x28\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x64\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x28\x09\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x12\0\0\0\x0d\0\0\0\x08\
\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x58\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\xc8\x05\0\0\0\0\0\0\x87\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x54\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x48\x09\0\
\0\0\0\0\0\x10\0\0\0\0\0\0\0\x12\0\0\0\x0f\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\
\0\0\0\x3d\0\0\0\x03\x4c\xff\x6f\0\0\0\x80\0\0\0\0\0\0\0\0\0\0\0\0\x58\x09\0\0\
\0\0\0\0\x02\0\0\0\0\0\0\0\x12\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x9f\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x50\x06\0\0\0\0\0\0\xd8\0\
\0\0\0\0\0\0\x01\0\0\0\x07\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0";

	return 0;
 err:
	bpf_object__destroy_skeleton(s);
	return -1;
}

#endif				/* __XDPPASS_BPF_SKEL_H__ */
